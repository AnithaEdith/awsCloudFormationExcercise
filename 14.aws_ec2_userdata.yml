AWSTemplateFormatVersion: 2010-09-09
Description: Sample Cloud Formation Template
Mappings:
  MyRegionAMIName:
    us-east-1:
      AMID: ami-062f7200baf2fa504
    us-east-2:
      AMID: ami-0d542ef84ec55d71c
    us-west-1:
      AMID: ami-04bc3da8f14823e88

  MyInstanceTypeMap:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small
    qa:
      instanceType: t2.medium

Conditions:
  CreateEIPForProd: !Equals [!Ref MyEnvironment, prod]
  CreateSecurityGroupProd: !Equals [!Ref MyEnvironment, prod]
  CreateSecurityGroupDev: !Not [{Condition: CreateSecurityGroupProd}]
  CreateKeyPairOr: !Or [!Equals [!Ref 'AWS::Region', us-east-1], !Equals [!Ref 'AWS::Region', us-east-2]]
  CreateKeyPairAnd: !And [!Equals [!Ref MyEnvironment, prod],{Condition: CreateKeyPairOr}]

Parameters:
  MyImageID:
    Type: String
    Default: ami-04bc3da8f14823e88
  MyAvailabilityZone:
    Description: This is my Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
  MyEnvironment:
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
      - qa

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
         default: "My EC2 Instance Configuration"
        Parameters:
          - MyAvailabilityZone
          - MyImageID
      - Label:
         default: "My Environment Configuration"
        Parameters:
          - MyEnvironment
    ParameterLabels:
      MyAvailabilityZone:
        default: "Provide the availability Zone appropriately"
      MyEnvironment:
        default: "Provide the environment name as dev if you want to create dev and prod if you want to create Prod"
      MyImageID:
        default: "Provide the appropriate Image Id"
      
Resources:
  MyEc2Instance:
    Description: My EC2 instance
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !FindInMap
        - MyInstanceTypeMap
        - !Ref MyEnvironment
        - instanceType
      ImageId: !Ref MyImageID
      KeyName: !If [CreateKeyPairAnd, anithatest, USWest1KeyPair]
      SecurityGroups: !If [CreateSecurityGroupDev,[!Ref MyDevSecurityGroup], [!Ref 'AWS::NoValue']]
      AvailabilityZone: !Ref MyAvailabilityZone
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum -y update
          sudo yum -y erase java-1.7.0-openjdk.x86_64
          sudo yum -y install java-1.8.0-openjdk.x86_64
          sudo yum -y install java-1.8.0-openjdk-devel
          sudo yum -y install tomcat8
          sudo service tomcat8 start
          sudo mkdir /usr/share/tomcat8/webapps/ROOT
          sudo touch /usr/share/tomcat8/webapps/ROOT/index.html
          sudo chmod 777 /usr/share/tomcat8/webapps/ROOT/index.html
          sudo echo "Cloud formation Tomcat8 sample" > /usr/share/tomcat8/webapps/ROOT/index.html

  MyElasticIP:
    Type: 'AWS::EC2::EIP'
    Condition: CreateEIPForProd
    Properties:
      InstanceId: !Ref MyEc2Instance
  MyDevSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: CreateSecurityGroupDev
    Properties:
      GroupDescription: My dev Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0      
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0 

Outputs:
  AppURL:
    Description: Tomcat App Access URL
    Value: !Sub 'http://${MyEc2Instance.PublicDnsName}:8080/index.html'