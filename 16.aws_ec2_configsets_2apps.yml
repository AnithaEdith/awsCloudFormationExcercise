AWSTemplateFormatVersion: 2010-09-09
Description: Helper Scripts demo

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: USWest1KeyPair

Resources:
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: MY SG with port 22 and 8080 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0      
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0 

  MyVMInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Deploy a simple tomcat Application
      AWS::CloudFormation::Init:
        configSets: 
          App1AndApp2:
            - App1
            - App2
        App1:
          packages: 
            yum:
              java-1.8.0-openjdk.x86_64: []
              java-1.8.0-openjdk-devel: []
              tomcat8: []
          groups:
            groupone: {}
            grouptwo: 
              gid: "501"
          users:
            user1:
              groups:
                - groupone
                - grouptwo
              uid: "501"
              homeDir: "/tmp"
          sources:
            /tmp: "https://springmusicanitha.s3-us-west-1.amazonaws.com/spring-music.jar"
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=7
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub | 
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MyVMInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyVMInstance --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
          commands:
            test1:
              command: "chmod 755 *.jar"
              cwd: "/tmp"
            test2:
              command: "sudo yum -y eraser java-1.7.0-openjdk.x86_64"
              cwd: "~"
            test3:
              command: "rm -rf *.jar"
              cwd: "/var/lib/tomcat8/webapps"
            test4:
              command: "cp *.jar /var/lib/tomcat8/webapps"
              cwd: "/tmp"
          services:
            sysvinit:
              tomcat8:
                enabled: "true"
                ensureRunning: "true"
        App2:
          commands:
            test1:
              command: "mkdir ROOT"
              cwd: "/var/lib/tomcat8/webapps"
            test2:
              command: "echo \"$INDEXCONTENT\" > index.html"
              env:
                INDEXCONTENT: "Root page of tomcat App2"
              cwd: "/var/lib/tomcat8/webapps/ROOT"
    Properties:
      ImageId: ami-04bc3da8f14823e88
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
        "Fn::Base64":
          !Sub | 
            #!/bin/bash
            sudo su
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r MyVMInstance --configsets App1AndApp2 --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource MyVMInstance --region ${AWS::Region}
            /opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'

Outputs:
  App1URL:
    Description: Application 1 URL to access
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/demo/hello'
  App2URL:
    Description: Application 2 URL to access
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/index.html'